<?php

namespace AppBundle\Repository;

/**
 * PromotionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionRepository extends \Doctrine\ORM\EntityRepository
{
    public function findBiggestGeneralPromotion()
    {
        $qb=$this->createQueryBuilder('p');
        $today=new \DateTime();

        $qb
            ->select('p.percent')
            ->where($qb->expr()->lte('p.startDate', ':today'))
            ->andWhere($qb->expr()->gte('p.endDate',':today'))
            ->setParameter('today',$today->format('Y-m-d'))
            ->andWhere($qb->expr()->isNull('p.category'))
            ->andWhere($qb->expr()->isNull('p.offer'));

        $query=$qb
            ->orderBy('p.percent','DESC')
            ->setMaxResults(1)
            ->getQuery();

        if($query->getOneOrNullResult() !== null){
            return $query->getSingleScalarResult();
        }
        return 0;
    }

    public function findCategoriesPromotions()
    {
        $qb=$this->createQueryBuilder('p');

        $today=new \DateTime();

        $qb
            ->select(['MAX(p.percent) as percent','c.id'])
            ->join('p.category','c')
            ->where($qb->expr()->lte('p.startDate',':today'))
            ->andWhere($qb->expr()->gte('p.endDate',':today'))
            ->setParameter(':today',$today->format('Y-m-d'))
            ->groupBy('c')
            ->orderBy('p.percent','DESC');

        $results=$qb->getQuery()->getResult();

        $promotions=[];
        foreach ($results as $promotion){
            $promotions[(int)$promotion['id']]=(int)$promotion['percent'];
        }
        return $promotions;
    }

    public function findOffersPromotions()
    {
        $qb=$this->createQueryBuilder('p');

        $today=new \DateTime();

        $qb
            ->select(['MAX(p.percent) as percent','o.id'])
            ->join('p.offer','o')
            ->where($qb->expr()->lte('p.startDate',':today'))
            ->andWhere($qb->expr()->gte('p.endDate',':today'))
            ->setParameter(':today',$today->format('Y-m-d'))
            ->groupBy('o')
            ->orderBy('p.percent','DESC');

        $results=$qb->getQuery()->getResult();

        $promotions=[];
        foreach ($results as $promotion){
            $promotions[(int)$promotion['id']]=(int)$promotion['percent'];
        }
        return $promotions;
    }
}
